[tool.poetry]
name = "hue-api"
version = "0.2.1"
description = "Async API for controlling Hue Lights"
authors = ["Nirantak Raghav <hey@nirantak.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/nirantak/hue-api"
repository = "https://github.com/nirantak/hue-api"
documentation = "https://github.com/nirantak/hue-api#readme"
keywords = ["hue", "lights", "async", "automation"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Typing :: Typed",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
]
packages = [{ include = "hue" }]
include = ["tests", "LICENSE", "README.md", "CHANGELOG.md"]

[tool.poetry.scripts]
hue = 'hue.cli:app'

[tool.poetry.dependencies]
python = "^3.7"
httpx = "^0.17.1"
typer = {extras = ["all"], version = "^0.3.2"}

[tool.poetry.dev-dependencies]
setuptools = "^56.0.0"
wheel = "^0.36.2"
black = { version = "^20.8b1", optional = true }
bump2version = { version = "^1.0.1", optional = true }
flake8 = { version = "^3.9.1", optional = true }
pre-commit = { version = "^2.12.1", optional = true }
coverage = { version = "^5.5", optional = true }
Faker = { version = "^8.1.0", optional = true }
pytest = { version = "^6.2.3", optional = true }
tox = { version = "^3.23.0", optional = true }

[tool.poetry.extras]
dev = ["black", "bump2version", "flake8", "pre-commit"]
test = ["coverage", "Faker", "pytest", "tox"]
tox = ["Faker", "pytest"]

[tool.poetry.urls]
"Tracker" = "https://github.com/nirantak/hue-api/issues"

[tool.black]
line-length = 80
target_version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
  \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.vscode
  | __pycache__
)/
'''

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
